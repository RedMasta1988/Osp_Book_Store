# Generated by Django 4.2.5 on 2023-10-12 16:47

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("guide", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title_of_the_book",
                    models.CharField(max_length=50, verbose_name="Название книги"),
                ),
                (
                    "cover_foto",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=None,
                        verbose_name="Фото обложки",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="Цена(BYN)"
                    ),
                ),
                (
                    "year_of_publication",
                    models.IntegerField(verbose_name="Год издания"),
                ),
                ("page", models.IntegerField(verbose_name="Количество страниц")),
                ("binding", models.CharField(max_length=50, verbose_name="Переплёт")),
                ("format", models.CharField(max_length=50, verbose_name="Формат")),
                (
                    "isbn",
                    models.PositiveBigIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1000000000000),
                            django.core.validators.MaxValueValidator(9999999999999),
                        ],
                        verbose_name="ISBN",
                    ),
                ),
                ("weight", models.IntegerField(verbose_name="Вес(гр)")),
                ("age", models.IntegerField(verbose_name="Возрастные ограничения")),
                (
                    "availability",
                    models.IntegerField(verbose_name="Количество книг в наличии"),
                ),
                (
                    "active",
                    models.CharField(
                        choices=[("Да", "ДА"), ("Нет", "НЕТ")],
                        default="Да",
                        max_length=3,
                        verbose_name="Доступен для заказа",
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Рейтинг(1-10)",
                    ),
                ),
                (
                    "publish",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Дата внесения в каталог",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "genre",
                    models.ManyToManyField(
                        related_name="book_of_writer",
                        to="guide.genre",
                        verbose_name="Жанр",
                    ),
                ),
                (
                    "publishing_house",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="guide.publishinghouse",
                        verbose_name="Издательство",
                    ),
                ),
                (
                    "serie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="guide.serie",
                        verbose_name="Серия",
                    ),
                ),
                (
                    "writer",
                    models.ManyToManyField(
                        related_name="book_of_writer",
                        to="guide.writer",
                        verbose_name="Автор",
                    ),
                ),
            ],
            options={
                "verbose_name": "Книгу",
                "verbose_name_plural": "Книги",
                "ordering": ("-publish",),
            },
        ),
    ]
